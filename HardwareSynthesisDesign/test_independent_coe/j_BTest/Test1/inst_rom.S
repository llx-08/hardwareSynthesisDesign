   .org 0x0
   .set noat
   .set noreorder
   .set nomacro
   .global _start
_start:                  #后面的数字多少表示该条指令执行的顺序

   addiu  $1,$0,0x0001   #1      ## $1 = 0x1                                                           0x00
   j    0x20             #2      ## 08000008   跳转到0x20处                                             0x04
   addiu  $1,$1,0x0001   #3      ## 24210001   $1 = 0x2,这条指令是会执行的，那么$1在这个地方会+1          #0x08
   addiu  $1,$1,0x1111           ## 24211111                                                           #0x0c
   addiu  $1,$1,0x1100           ## 24211100                                                           #0x10

   .org 0x20             
   addiu  $1,$1,0x0001   #4      ## $1 = 0x3                                                 #20
   jal  0x40             #5      ## 跳转到0x40并且将下下条指令的返回地址存到31号寄存器           #24
   nop                   #6                                                                  #28
   addiu  $1,$1,0x0001   #9      ## r1 = 0x40                                                #2c
   addiu  $1,$1,0x0001   #10     ## r1 = 0x5                                                 #30
   j    0x60             #11     ## 这次跳到0x60处，也就是line35                               #34
   nop                   #12

   .org 0x40

   jalr $2,$31           #7      ## 跳转到$31中的地址，那也就是跳到line17那条指令（addiu  $1,$1,0x0001） #40
                                 ## 然后将pc+8存到$2中，现在$31中的地址仍然是line17那条指令，
                                 ## 但是$2中的地址应该是line33的指令（addiu $1,$1,0x0001) 也就是$2最后的值应该是48

   #这条or指令的地址是0x44
   or   $3,$2,$0         #8      ## $3 = 0xb0000048                                       #44

   #这条addiu指令的地址为0x48
   addiu  $1,$1,0x0001   #16     ## $1 = 0x8                                              #48
   addiu  $1,$1,0x0001   #17     ## $1 = 0x9                                              #4c
   addiu  $1,$1,0x0001   #18     ## $1 = 0xa                                              #50
   j 0x80                #19                                                              #54
   nop                   #20                                                              #58

   .org 0x60
   addiu  $1,$1,0x0001   #13     ## $1 = 0x6                                              #60
   jr   $3               #14     ##使用$3中的值进行跳转，也就是跳到0xb0000048                #64
   addiu  $1,$1,0x0001   #15     ## $1 = 0x7                                              #68
   addiu  $1,$1,0x1111                                                                    #6c
   addiu  $1,$1,0x1100                                                                    #70

   .org 0x80             #21                                                              
   nop                   #22                                                              #80
    
_loop:
   j _loop                                                                                #84
   nop                                                                                    #88

